# procedural

@app.post("/accounts")
def create_account(request):
    ucinput = create_account_controller(request)
    ucoutput = create_account_interactor(db, ucinput)
    vmodel = create_account_presenter(ucoutput)
    response = create_account_view(vmodel)

    return response

- WebServer gathers input data from the user and hands it to the Controller

- Controller packages that data and passes to the UseCaseInteractor

- UseCaseInteractor interprets the data and uses it to control the dance of the Entities.
- UseCaseInteractor also uses the DataAccessInterface to bring the data used by those Entities into
memory from the Database.
- UseCaseInteractor gathers data from the Entities and constructs the UseCaseOutput

- Presenter repackage the UseCaseOutput into viewable form as the ViewModel (VM)

- ViewModel contains mostly strings and flags that View uses to display the data

- View move the data from the ViewModel into the HTML page

# oo

@app.post("/accounts")
def create_account(request):
    v = CreateAccountView()
    p = CreateAccountPresenter()
    uc = CreateAccountUseCase(db, p)
    c = CreateAccountController(uc)

    c.execute(request)

    return v.response(p.view_model)



